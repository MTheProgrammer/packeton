<?php

namespace Packagist\WebBundle\Repository;

use Doctrine\Common\Collections\Criteria;
use Packagist\WebBundle\Entity\Webhook;

/**
 * WebhookRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class WebhookRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @param string|null $package
     * @param array $events
     * @param Criteria|null $criteria
     *
     * @return Webhook[]
     */
    public function findActive(string $package = null, array $events = [], $criteria = null): array
    {
        $qb = $this->createQueryBuilder('w')
            ->where('w.active = true');

        if (null !== $criteria) {
            $qb->addCriteria($criteria);
        }

        $webhooks = $qb->getQuery()->getResult();
        if (null !== $package) {
            $webhooks = array_filter($webhooks, function (Webhook $webhook) use ($package) {
                return $webhook->getPackageRestriction() === null || preg_match($webhook->getPackageRestriction(), $package);
            });
        }

        if ($events) {
            $webhooks = array_filter($webhooks, function (Webhook $webhook) use ($events) {
                return $webhook->matchAnyEvents(...$events);
            });
        }

        return $webhooks;
    }
}
